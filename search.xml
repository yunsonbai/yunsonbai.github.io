<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[使用diamond监控系统或api]]></title>
      <url>http://yunsonbai.github.io/2016/06/13/python-diamond/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如何保证系统或api在出问题的时候及时发现并解决呢？</span><br><span class="line">这就需要用到监控系统，监控系统可以是实时监控，也</span><br><span class="line">可以是非实时的（需要定时去检查系统），这里说一下</span><br><span class="line">用diamond实现非实时监控</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/Diamond</span></span><br><span class="line"><span class="comment"># git clone git@github.com:python-diamond/Diamond.git</span></span><br></pre></td></tr></table></figure>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="diamond配置（-conf-diamond-conf）"><a href="#diamond配置（-conf-diamond-conf）" class="headerlink" title="diamond配置（./conf/diamond.conf）"></a>diamond配置（./conf/diamond.conf）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line">[server]</span><br><span class="line"></span><br><span class="line">handlers = diamond.handler.graphite.GraphiteHandler, diamond.handler.archive.ArchiveHandler</span><br><span class="line"></span><br><span class="line"><span class="comment"># User diamond will run as</span></span><br><span class="line"><span class="comment"># Leave empty to use the current user</span></span><br><span class="line">user =</span><br><span class="line"></span><br><span class="line"><span class="comment"># Group diamond will run as</span></span><br><span class="line"><span class="comment"># Leave empty to use the current group</span></span><br><span class="line">group =</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pid file</span></span><br><span class="line">pid_file = /xx/Diamond/run/diamond.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory to load collector modules from</span></span><br><span class="line">collectors_path = /xx/Diamond/share/diamond/collectors/</span><br><span class="line">collectors_config_path = /xx/Diamond/conf/collectors/</span><br><span class="line">collectors_reload_interval = 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory to load handler configs from</span></span><br><span class="line">handlers_config_path = /xx/Diamond/conf/handlers/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory to load handler modules from</span></span><br><span class="line">handlers_path = /xx/Diamond/share/diamond/handlers/</span><br><span class="line"></span><br><span class="line"><span class="comment">################################################################################</span></span><br><span class="line"><span class="comment">### Options for handlers</span></span><br><span class="line">[handlers]</span><br><span class="line"></span><br><span class="line"><span class="comment"># daemon logging handler(s)</span></span><br><span class="line">keys = rotated_file</span><br><span class="line"></span><br><span class="line"><span class="comment">### Defaults options for all Handlers</span></span><br><span class="line">[[default]]</span><br><span class="line"></span><br><span class="line">[[ArchiveHandler]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># File to write archive log files</span></span><br><span class="line"><span class="built_in">log</span>_file = /var/<span class="built_in">log</span>/diamond/archive.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># Number of days to keep archive log files</span></span><br><span class="line">days = 7</span><br><span class="line"></span><br><span class="line">[[GraphiteHandler]]</span><br><span class="line"><span class="comment">### Options for GraphiteHandler</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Graphite server host(本人认为携程carbon比较合适)</span></span><br><span class="line">host = xx.xx.xx.xx</span><br><span class="line"></span><br><span class="line"><span class="comment"># Port to send metrics to</span></span><br><span class="line">port = 2003</span><br><span class="line"></span><br><span class="line"><span class="comment"># Socket timeout (seconds)</span></span><br><span class="line">timeout = 15</span><br><span class="line"></span><br><span class="line"><span class="comment"># Batch size for metrics</span></span><br><span class="line">batch = 1</span><br><span class="line"></span><br><span class="line">[[GraphitePickleHandler]]</span><br><span class="line"><span class="comment">### Options for GraphitePickleHandler</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Graphite server host(本人认为携程carbon比较合适)</span></span><br><span class="line">host = xx.xx.xx.xx  <span class="comment">#写你搭建好的carbon服务器地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Port to send metrics to</span></span><br><span class="line">port = 2004</span><br><span class="line"></span><br><span class="line"><span class="comment"># Socket timeout (seconds)</span></span><br><span class="line">timeout = 15</span><br><span class="line"></span><br><span class="line"><span class="comment"># Batch size for pickled metrics</span></span><br><span class="line">batch = 256</span><br><span class="line"></span><br><span class="line">[[MySQLHandler]]</span><br><span class="line"><span class="comment">### Options for MySQLHandler</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL Connection Info</span></span><br><span class="line">hostname    = xx.xx.xx.xx</span><br><span class="line">port        = xx</span><br><span class="line">username    = xx</span><br><span class="line">password    = xx</span><br><span class="line">database    = diamond</span><br><span class="line">table       = metrics</span><br><span class="line"><span class="comment"># INT UNSIGNED NOT NULL</span></span><br><span class="line">col_time    = timestamp</span><br><span class="line"><span class="comment"># VARCHAR(255) NOT NULL</span></span><br><span class="line">col_metric  = metric</span><br><span class="line"><span class="comment"># VARCHAR(255) NOT NULL</span></span><br><span class="line">col_value   = value</span><br><span class="line"></span><br><span class="line">[[StatsdHandler]]</span><br><span class="line">host = 127.0.0.1</span><br><span class="line">port = 8125</span><br><span class="line"></span><br><span class="line">[[TSDBHandler]]</span><br><span class="line">host = 127.0.0.1</span><br><span class="line">port = 4242</span><br><span class="line">timeout = 15</span><br><span class="line"></span><br><span class="line">[[LibratoHandler]]</span><br><span class="line">user = user@example.com</span><br><span class="line">apikey = abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz01</span><br><span class="line"></span><br><span class="line">[[HostedGraphiteHandler]]</span><br><span class="line">apikey = abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz01</span><br><span class="line">timeout = 15</span><br><span class="line">batch = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># And any other config settings from GraphiteHandler are valid here</span></span><br><span class="line"></span><br><span class="line">[[HttpPostHandler]]</span><br><span class="line"></span><br><span class="line"><span class="comment">### Urp to post the metrics</span></span><br><span class="line">url = http://localhost:8888/</span><br><span class="line"><span class="comment">### Metrics batch size</span></span><br><span class="line">batch = 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################################################################</span></span><br><span class="line"><span class="comment">### Options for collectors</span></span><br><span class="line">[collectors]</span><br><span class="line">[[default]]</span><br><span class="line"><span class="comment">### Defaults options for all Collectors</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment and set to hardcode a hostname for the collector path</span></span><br><span class="line"><span class="comment"># Keep in mind, periods are seperators in graphite</span></span><br><span class="line"><span class="comment"># hostname = my_custom_hostname</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If you prefer to just use a different way of calculating the hostname</span></span><br><span class="line"><span class="comment"># Uncomment and set this to one of these values:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># smart             = Default. Tries fqdn_short. If that's localhost, uses hostname_short</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fqdn_short        = Default. Similar to hostname -s</span></span><br><span class="line"><span class="comment"># fqdn              = hostname output</span></span><br><span class="line"><span class="comment"># fqdn_rev          = hostname in reverse (com.example.www)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># uname_short       = Similar to uname -n, but only the first part</span></span><br><span class="line"><span class="comment"># uname_rev         = uname -r in reverse (com.example.www)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hostname_short    = `hostname -s`</span></span><br><span class="line"><span class="comment"># hostname          = `hostname`</span></span><br><span class="line"><span class="comment"># hostname_rev      = `hostname` in reverse (com.example.www)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shell             = Run the string set in hostname as a shell command and use its</span></span><br><span class="line"><span class="comment">#                     output(with spaces trimmed off from both ends) as the hostname.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hostname_method = smart</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path Prefix and Suffix</span></span><br><span class="line"><span class="comment"># you can use one or both to craft the path where you want to put metrics</span></span><br><span class="line"><span class="comment"># such as: %(path_prefix)s.$(hostname)s.$(path_suffix)s.$(metric)s</span></span><br><span class="line">path_prefix = servers <span class="comment">#在graphite显示的最外层名字</span></span><br><span class="line"><span class="comment"># path_suffix =</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path Prefix for Virtual Machines</span></span><br><span class="line"><span class="comment"># If the host supports virtual machines, collectors may report per</span></span><br><span class="line"><span class="comment"># VM metrics. Following OpenStack nomenclature, the prefix for</span></span><br><span class="line"><span class="comment"># reporting per VM metrics is "instances", and metric foo for VM</span></span><br><span class="line"><span class="comment"># bar will be reported as: instances.bar.foo...</span></span><br><span class="line"><span class="comment"># instance_prefix = instances</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default Poll Interval (seconds)</span></span><br><span class="line">interval = 10  <span class="comment">#(所有的监控多长时间执行一次，并发送数据给carbon)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###############################################</span></span><br><span class="line"><span class="comment"># Default enabled collectors</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[[CPUCollector]]</span></span><br><span class="line"><span class="comment">#enabled = True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[[DiskSpaceCollector]]</span></span><br><span class="line"><span class="comment">#enabled = True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[[DiskUsageCollector]]</span></span><br><span class="line"><span class="comment">#enabled = True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#[[LoadAverageCollector]]</span></span><br><span class="line"><span class="comment">#enabled = True</span></span><br><span class="line"></span><br><span class="line">[[MemoryCollector]]</span><br><span class="line">enabled = True</span><br><span class="line"></span><br><span class="line"><span class="comment">#[[VMStatCollector]]</span></span><br><span class="line"><span class="comment">#enabled = True</span></span><br><span class="line"></span><br><span class="line">[loggers]</span><br><span class="line"></span><br><span class="line">keys = root</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers are higher in this config file, in:</span></span><br><span class="line"><span class="comment"># [handlers]</span></span><br><span class="line"><span class="comment"># keys = ...</span></span><br><span class="line"></span><br><span class="line">[formatters]</span><br><span class="line"></span><br><span class="line">keys = default</span><br><span class="line"></span><br><span class="line">[logger_root]</span><br><span class="line"></span><br><span class="line"><span class="comment"># to increase verbosity, set DEBUG</span></span><br><span class="line">level = INFO</span><br><span class="line">handlers = rotated_file</span><br><span class="line">propagate = 1</span><br><span class="line"></span><br><span class="line">[handler_rotated_file]</span><br><span class="line"></span><br><span class="line">class = handlers.TimedRotatingFileHandler</span><br><span class="line">level = DEBUG</span><br><span class="line">formatter = default</span><br><span class="line"><span class="comment"># rotate at midnight, each day and keep 7 days</span></span><br><span class="line">args = (<span class="string">'/var/log/diamond/diamond.log'</span>, <span class="string">'midnight'</span>, 1, 7)</span><br><span class="line"></span><br><span class="line">[formatter_default]</span><br><span class="line"></span><br><span class="line">format = [%(asctime)s] [%(threadName)s] %(message)s</span><br><span class="line">datefmt =</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment">### Options for config merging</span></span><br><span class="line"><span class="comment"># [configs]</span></span><br><span class="line"><span class="comment"># path = "/etc/diamond/configs/"</span></span><br><span class="line"><span class="comment"># extension = ".conf"</span></span><br><span class="line"><span class="comment">#----------------------------------------------</span></span><br><span class="line"><span class="comment"># Example:</span></span><br><span class="line"><span class="comment"># /etc/diamond/configs/net.conf</span></span><br><span class="line"><span class="comment"># [collectors]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># [[NetworkCollector]]</span></span><br><span class="line">          <span class="comment"># enabled = True</span></span><br></pre></td></tr></table></figure>
<h3 id="数据库支持（mysql）"><a href="#数据库支持（mysql）" class="headerlink" title="数据库支持（mysql）"></a>数据库支持（mysql）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database diamond</span><br></pre></td></tr></table></figure>
<h3 id="增加MemoryCollector（当然按照上边的配置还能加其他的）"><a href="#增加MemoryCollector（当然按照上边的配置还能加其他的）" class="headerlink" title="增加MemoryCollector（当然按照上边的配置还能加其他的）"></a>增加MemoryCollector（当然按照上边的配置还能加其他的）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在目录/xx/Diamond/share/diamond/collectors/中添加一个py文件</span><br><span class="line">该文件diamond已经写好，在src目录下寻找一下</span><br><span class="line">（src/collectors/memory/memory.py）</span><br></pre></td></tr></table></figure>
<h3 id="增加自己的Collector"><a href="#增加自己的Collector" class="headerlink" title="增加自己的Collector"></a>增加自己的Collector</h3><h4 id="添加ExampleCollector-conf"><a href="#添加ExampleCollector-conf" class="headerlink" title="添加ExampleCollector.conf"></a>添加ExampleCollector.conf</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在/xx/Diamond/conf/collectors/添加一个ExampleCollector.conf</span><br><span class="line">（你也可以是其他的名字，xxCollector.conf ）</span><br></pre></td></tr></table></figure>
<h4 id="添加ExampleCollector-py"><a href="#添加ExampleCollector-py" class="headerlink" title="添加ExampleCollector.py"></a>添加ExampleCollector.py</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">在/xx/Diamond/share/diamond/collectors/中添加ExampleCollector.py</span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line">import diamond.collector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="built_in">test</span>():</span><br><span class="line">    <span class="comment"># dosomething</span></span><br><span class="line">    pass   </span><br><span class="line"></span><br><span class="line">class ExampleCollector(diamond.collector.Collector):</span><br><span class="line"></span><br><span class="line">    def collect(self):</span><br><span class="line">        metric_name = <span class="string">"my.example.metric"</span></span><br><span class="line">        st = time.time()</span><br><span class="line">        <span class="built_in">test</span>()</span><br><span class="line">        et = time.time()</span><br><span class="line">        metric_value = (et - st) * 1000</span><br><span class="line">        self.publish(metric_name, metric_value)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/Diamond</span></span><br><span class="line"><span class="comment"># python ./bin/diamond -lf -c ./conf/diamond.conf</span></span><br></pre></td></tr></table></figure>
<h3 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可以到已经搭建好的graphite（待我整理完会补充，也可以到网上搜一下）</span><br><span class="line">后台查看应该会有 /Metrics/servers .....</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://diamond.readthedocs.io/en/latest/" target="_blank" rel="external">Diamond</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[当eth0没有ipv4地址的解决办法]]></title>
      <url>http://yunsonbai.github.io/2016/06/09/eth0-no-ipv4/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有时候我们在Linux使用ifconfig后发现没有ipv4地址，下边说一下解决办法</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="打开ubuntu的-etc-network-interfaces"><a href="#打开ubuntu的-etc-network-interfaces" class="headerlink" title="打开ubuntu的/etc/network/interfaces"></a>打开ubuntu的/etc/network/interfaces</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">删除已经有的，后根据喜好选择添加如下</span><br><span class="line">自动：</span><br><span class="line">         auto eth0</span><br><span class="line">         iface eth0 inet dhcp</span><br><span class="line">    静态分配的配置方法：</span><br><span class="line">         auto eth0</span><br><span class="line">         iface eth0 inet static</span><br><span class="line">         address 192.168.205.139</span><br><span class="line">         netmask  255.255.255.0</span><br><span class="line">         gateway  192.168.205.1</span><br></pre></td></tr></table></figure>
<h2 id="添加域名服务器"><a href="#添加域名服务器" class="headerlink" title="添加域名服务器"></a>添加域名服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开/etc/resolv.conf文件</span><br><span class="line">   添加这行:nameserver 127.0.0.1</span><br></pre></td></tr></table></figure>
<h2 id="重启eth0"><a href="#重启eth0" class="headerlink" title="重启eth0"></a>重启eth0</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$/etc/init.d/networking restart(这条命令是重启网卡)</span><br><span class="line"> 或者</span><br><span class="line"><span class="variable">$ifdown</span> eth0</span><br><span class="line"><span class="variable">$ifup</span>   eth0（这两条命令是有针对性的重启某个网络接口，因为一个系统可能有多个网络接口）</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nginx常用配置]]></title>
      <url>http://yunsonbai.github.io/2016/06/09/nginx%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   nginx是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器，</span><br><span class="line">下边说一下这断时间用到的nginx配置</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream forum  &#123;</span><br><span class="line">	server 127.0.0.1:8000 weight 1;</span><br><span class="line">	server 127.0.0.1:8001 weight 1;</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">       listen 80;</span><br><span class="line">       location / &#123;</span><br><span class="line">           proxy_pass         http://forum;</span><br><span class="line">           proxy_<span class="built_in">set</span>_header   Host             <span class="variable">$host</span>;</span><br><span class="line">           proxy_<span class="built_in">set</span>_header   X-Real-IP        <span class="variable">$remote_addr</span>;</span><br><span class="line">           proxy_<span class="built_in">set</span>_header   X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">	location /static/ &#123;</span><br><span class="line">		proxy_<span class="built_in">set</span>_header Host test.xx.com;</span><br><span class="line">		proxy_<span class="built_in">set</span>_header Origin http://test.xx.com;</span><br><span class="line">		proxy_pass    http://test.xx.com/static1/; <span class="comment">#可以不是代理的url</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置与打印cookies"><a href="#设置与打印cookies" class="headerlink" title="设置与打印cookies"></a>设置与打印cookies</h2><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">       listen 80;</span><br><span class="line">       server_name test.xx.com;</span><br><span class="line">       add_header Set-Cookie <span class="string">"name=baisong"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">log</span>_format main	<span class="string">'$http_cookie,...'</span></span><br></pre></td></tr></table></figure>
<h2 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">	location /static/ &#123;</span><br><span class="line">       	<span class="built_in">alias</span>   /<span class="built_in">test</span>/static/;</span><br><span class="line">		expires 24h;</span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="进程数指定"><a href="#进程数指定" class="headerlink" title="进程数指定"></a>进程数指定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">worker_processes 8; <span class="comment">#最好和cpu数量一致</span></span><br></pre></td></tr></table></figure>
<h3 id="进程连接数指定"><a href="#进程连接数指定" class="headerlink" title="进程连接数指定"></a>进程连接数指定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">worker_connections 65535;</span><br><span class="line"><span class="comment"># 每个进程允许的最多连接数， 理论上每台nginx 服务器的最大连接数为worker_processes*worker_connections。</span></span><br><span class="line">   keepalive_timeout 60;keepalive 超时时间。</span><br></pre></td></tr></table></figure>
<h3 id="头部的缓冲区大小"><a href="#头部的缓冲区大小" class="headerlink" title="头部的缓冲区大小"></a>头部的缓冲区大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">open_file_cache max=65535 inactive=60s;</span><br><span class="line"><span class="comment">#这个将为打开文件指定缓存，默认是没有启用的，max 指定缓存数量，建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存。</span></span><br></pre></td></tr></table></figure>
<h3 id="缓存检查"><a href="#缓存检查" class="headerlink" title="缓存检查"></a>缓存检查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">open_file_cache_valid 80s;</span><br><span class="line"><span class="comment"># 这个是指多长时间检查一次缓存的有效信息。</span></span><br></pre></td></tr></table></figure>
<h3 id="控制缓冲区溢出攻击"><a href="#控制缓冲区溢出攻击" class="headerlink" title="控制缓冲区溢出攻击"></a>控制缓冲区溢出攻击</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">client_body_buffer_size  1K;</span><br><span class="line">client_header_buffer_size 1k;</span><br><span class="line">   client_max_body_size 1k;</span><br><span class="line">   large_client_header_buffers 2 1k;</span><br></pre></td></tr></table></figure>
<h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 限制可用的请求方法</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$request_method</span> !~ ^(GET|HEAD|POST)$ ) &#123;</span><br><span class="line">        <span class="built_in">return</span> 403;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="防止图片盗链"><a href="#防止图片盗链" class="headerlink" title="防止图片盗链"></a>防止图片盗链</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">只有www.example1.com example2.com 能访问</span><br><span class="line">   location /images/ &#123;</span><br><span class="line">        valid_referers none blocked www.example1.com example2.com;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">             <span class="built_in">return</span>   403;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p><a href="http://www.yunsonbai.top/2016/06/09/nginx-https%E9%85%8D%E7%BD%AE/" target="_blank" rel="external">nginx实现https</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[nginx实现https]]></title>
      <url>http://yunsonbai.github.io/2016/06/09/nginx-https%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   nginx是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器，</span><br><span class="line">下边说一下nginx关于https的配置</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="使用ssl生成证书"><a href="#使用ssl生成证书" class="headerlink" title="使用ssl生成证书"></a>使用ssl生成证书</h2><h3 id="生成命令"><a href="#生成命令" class="headerlink" title="生成命令"></a>生成命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt</span></span><br></pre></td></tr></table></figure>
<h3 id="输入完命令后的提示"><a href="#输入完命令后的提示" class="headerlink" title="输入完命令后的提示"></a>输入完命令后的提示</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">提示如下，一步一步完成即可（也可以使用默认，也可随意）：</span><br><span class="line">Country Name (2 letter code) [AU]:China</span><br><span class="line">   State or Province Name (full name) [Some-State]: Beijing</span><br><span class="line">   Locality Name (eg, city) []:Beijing</span><br><span class="line">   Organization Name (eg, company) [Internet Widgits Pty Ltd]:Bouncy Castles, Inc.</span><br><span class="line">   Organizational Unit Name (eg, section) []:Ministry of Water Slides</span><br><span class="line">   Common Name (e.g. server FQDN or YOUR name) []:your_domain.com</span><br><span class="line">   Email Address []:admin@your_domain.com</span><br></pre></td></tr></table></figure>
<h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><h3 id="打开-conf文件"><a href="#打开-conf文件" class="headerlink" title="打开.conf文件"></a>打开.conf文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx、nginx.conf文件</span><br><span class="line">   vim nginx.conf</span><br></pre></td></tr></table></figure>
<h3 id="添加如下配置"><a href="#添加如下配置" class="headerlink" title="添加如下配置"></a>添加如下配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">     listen 80;</span><br><span class="line">     server_name www.xxx.xxx;</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">	listen 443 ssl;</span><br><span class="line">    ssl_certificate /etc/nginx/ssl/nginx.crt;</span><br><span class="line">    ssl_certificate_key /etc/nginx/ssl/nginx.key;</span><br><span class="line">    location /static/ &#123;</span><br><span class="line">    	<span class="built_in">alias</span>   /<span class="built_in">test</span>/static/;</span><br><span class="line">        expires 24h;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -c /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>
<h3 id="创建静态页"><a href="#创建静态页" class="headerlink" title="创建静态页"></a>创建静态页</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /test/static</span><br><span class="line">touch test.html</span><br><span class="line">echo &apos;test https&apos; &gt; test.html</span><br></pre></td></tr></table></figure>
<h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在浏览器中访问https:127..0.1/static/test.html</span><br></pre></td></tr></table></figure>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">最近发现了一个很奇怪的问题，就是使用python在访问https下的链接的时候一切正常</span><br><span class="line">然而在ios9下访问就会时不时的出现1004问题（访问不到）,最后的解决办法是使用最</span><br><span class="line">新的nginx解决</span><br></pre></td></tr></table></figure>
<p><a href="http://www.yunsonbai.top/2016/06/09/nginx%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/" target="_blank" rel="external">nginx常用配置</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用rsyslog收集Django的日志]]></title>
      <url>http://yunsonbai.github.io/2016/06/08/django-rsyslog/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   日志收集对项目很重要,在前边我写过一篇如何利用sentry收集django程序运行时的日志,</span><br><span class="line">我们的项目中一般用sentry来收集error日志，因为打的比较详细，可观性也比较强。但是</span><br><span class="line">   我们如果把info日志达到sentry上不方便观看，所以不妨使用rsyslog来收集Django中的一</span><br><span class="line">些info日志，当然只是打我们想要的东西。</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu12.04</span><br></pre></td></tr></table></figure>
<h2 id="搭建rsyslog环境"><a href="#搭建rsyslog环境" class="headerlink" title="搭建rsyslog环境"></a>搭建rsyslog环境</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在Ubuntu中默认已经装好了rsyslog，当然如果有问题你可以自己安装（使用apt-get install rsyslog即可，你也可以使用编译安装）</span><br></pre></td></tr></table></figure>
<h3 id="配置（-var-log-mylog-forum-log）"><a href="#配置（-var-log-mylog-forum-log）" class="headerlink" title="配置（/var/log/mylog/forum.log）"></a>配置（/var/log/mylog/forum.log）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   你可以添加类似这样一条：</span><br><span class="line"><span class="built_in">local</span>4.*        /var/<span class="built_in">log</span>/mylog/forum.log</span><br></pre></td></tr></table></figure>
<h3 id="重启rsyslog"><a href="#重启rsyslog" class="headerlink" title="重启rsyslog"></a>重启rsyslog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service rsyslog restart</span><br></pre></td></tr></table></figure>
<h2 id="在Django中使用"><a href="#在Django中使用" class="headerlink" title="在Django中使用"></a>在Django中使用</h2><h3 id="修改Djangosettings-py"><a href="#修改Djangosettings-py" class="headerlink" title="修改Djangosettings.py"></a>修改Djangosettings.py</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">   from logging.handlers import SysLogHandler</span><br><span class="line"></span><br><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">'version'</span>: 1,</span><br><span class="line">    <span class="string">'disable_existing_loggers'</span>: False,</span><br><span class="line">    <span class="string">'formatters'</span>: &#123;</span><br><span class="line">        <span class="string">'verbose'</span>: &#123;</span><br><span class="line">            <span class="string">'format'</span>: <span class="string">"iSync|%(levelname)s|%(asctime)s|%(module)s|%(process)d|%(thread)d|%(message)s"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'simple'</span>: &#123;</span><br><span class="line">            <span class="string">'format'</span>: <span class="string">"iSync|%(levelname)s|%(asctime)s|%(message)s"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'handlers'</span>: &#123;</span><br><span class="line">        <span class="string">'null'</span>: &#123;</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.NullHandler'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'console'</span>: &#123;</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.StreamHandler'</span>,</span><br><span class="line">            <span class="string">'formatter'</span>: <span class="string">'verbose'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'syslog'</span>: &#123;</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.handlers.SysLogHandler'</span>,</span><br><span class="line">            <span class="string">'formatter'</span>: <span class="string">'simple'</span>,</span><br><span class="line">            <span class="string">'facility'</span>: SysLogHandler.LOG_LOCAL4, <span class="comment">#此处一定要和rsyslog中的local4一致</span></span><br><span class="line">            <span class="string">'address'</span>: <span class="string">'/dev/log'</span>, <span class="comment"># 机器上一定要有该文件（srw-rw-rw-）</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">'loggers'</span>: &#123;</span><br><span class="line">        <span class="string">'django.request'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'console'</span>, <span class="string">'null'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'ERROR'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: True,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'rsyslog'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'syslog'</span>, ],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: True,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="在view或其他地方调用，将日志打到rsyslog"><a href="#在view或其他地方调用，将日志打到rsyslog" class="headerlink" title="在view或其他地方调用，将日志打到rsyslog"></a>在view或其他地方调用，将日志打到rsyslog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   rsysloger = logging.getLogger(<span class="string">'rsyslog'</span>)</span><br><span class="line">   rsysloger.info(<span class="string">'sdsdsdsds'</span>)</span><br><span class="line"><span class="comment"># 之后你可以去/var/log/mylog/forum.log 看结果了</span></span><br></pre></td></tr></table></figure>
<h2 id="利用sentry收集Django日志"><a href="#利用sentry收集Django日志" class="headerlink" title="利用sentry收集Django日志"></a><a href="http://www.yunsonbai.top/2016/05/30/django-sentry/" target="_blank" rel="external">利用sentry收集Django日志</a></h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[富文本实践]]></title>
      <url>http://yunsonbai.github.io/2016/06/08/summernote/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前段时间趁着项目不忙自己玩了一下富文本，在html页实现富文本。</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="使用的js包"><a href="#使用的js包" class="headerlink" title="使用的js包"></a>使用的js包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">summernote</span><br></pre></td></tr></table></figure>
<h3 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">   &lt;html&gt;</span><br><span class="line">   &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">   &lt;head&gt;</span><br><span class="line">   &lt;link href=<span class="string">"../bootstrap-3.3.5/css/bootstrap.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">   &lt;link href=<span class="string">"font-awesome-4.5.0/css/font-awesome.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">   &lt;link href=<span class="string">"summernote/dist/summernote.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">   &lt;script src=<span class="string">"../jquery-2.1.4.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">"../bootstrap-3.3.5/js/bootstrap.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">"summernote/dist/summernote.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">"mysummer.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">"mysummer.css"</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;/head&gt;</span><br><span class="line">   &lt;body&gt;</span><br><span class="line">     &lt;div id=<span class="string">"summernote"</span>&gt;Hello Summernote&lt;/div&gt;</span><br><span class="line">     &lt;span onclick=<span class="string">'getContext(this)'</span>&gt;预览&lt;/span&gt;</span><br><span class="line">   </span><br><span class="line">     &lt;div id=<span class="string">"context"</span>&gt;&lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">   &lt;/body&gt;</span><br><span class="line">   &lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h3 id="mysummer-js代码"><a href="#mysummer-js代码" class="headerlink" title="mysummer.js代码"></a>mysummer.js代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$(document).ready(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">  $(<span class="string">'#summernote'</span>).summernote(&#123;</span><br><span class="line">        toolbar: [</span><br><span class="line">            [<span class="string">'style'</span>, [<span class="string">'style'</span>,<span class="string">'fontname'</span>, <span class="string">'bold'</span>, <span class="string">'italic'</span>, <span class="string">'underline'</span>,<span class="string">'fontsize'</span>,<span class="string">'color'</span>]],</span><br><span class="line">            [<span class="string">'font'</span>, [<span class="string">'strikethrough'</span>, <span class="string">'superscript'</span>, <span class="string">'subscript'</span>]],</span><br><span class="line">            [<span class="string">'para'</span>, [<span class="string">'ul'</span>, <span class="string">'ol'</span>, <span class="string">'paragraph'</span>]],</span><br><span class="line">            [<span class="string">'insert'</span>, [<span class="string">'link'</span>, <span class="string">'picture'</span>, <span class="string">'table'</span>, <span class="string">'hr'</span>]],</span><br><span class="line">            [<span class="string">'height'</span>, [<span class="string">'height'</span>]],</span><br><span class="line">            [<span class="string">'misc'</span>, [<span class="string">'redo'</span>,<span class="string">'undo'</span>,<span class="string">'help'</span>, <span class="string">'fullscreen'</span>]],</span><br><span class="line">            // [<span class="string">'view'</span>, [<span class="string">'codeview'</span>]],</span><br><span class="line">      ]</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> getContext(obj)&#123;</span><br><span class="line">     $(document).ready(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">          var code = $(<span class="string">'#summernote'</span>).summernote(<span class="string">'code'</span>);</span><br><span class="line">          var context = document.getElementById(<span class="string">'context'</span>);</span><br><span class="line">          context.innerHTML=code;</span><br><span class="line"></span><br><span class="line">          var data = &#123;<span class="string">"code"</span>:$(<span class="string">'#summernote'</span>).summernote(<span class="string">'code'</span>)&#125;;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">'/whatdo/test'</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">'POST'</span>,</span><br><span class="line">            data: data,</span><br><span class="line">            dataType: <span class="string">'json'</span>,</span><br><span class="line">            success: <span class="keyword">function</span>(data,status)&#123;</span><br><span class="line">                 alert(data.status)</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">     &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="mysummer-css代码"><a href="#mysummer-css代码" class="headerlink" title="mysummer.css代码"></a>mysummer.css代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#summernote'</span>).summernote(&#123;</span><br><span class="line"> /*  height: 700,*/</span><br><span class="line">   minHeight: null,</span><br><span class="line">   maxHeight: null,</span><br><span class="line">   focus: <span class="literal">true</span></span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure>
<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><img src="/images/article_img/summernote.jpg">
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用sentry收集django的日志]]></title>
      <url>http://yunsonbai.github.io/2016/05/30/django-sentry/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">日志收集对项目很重要,利用sentry可以手机django程序运行时的日志,</span><br><span class="line">同时适当的配置还能发送报警邮件</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="搭建sentry环境"><a href="#搭建sentry环境" class="headerlink" title="搭建sentry环境"></a>搭建sentry环境</h2><h3 id="创建独立环境"><a href="#创建独立环境" class="headerlink" title="创建独立环境"></a>创建独立环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virtualenv sentry</span><br><span class="line">安装好MySQL 和 redis</span><br></pre></td></tr></table></figure>
<h3 id="安装sentry"><a href="#安装sentry" class="headerlink" title="安装sentry"></a>安装sentry</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install sentry</span><br></pre></td></tr></table></figure>
<h3 id="配置-env-sentry-conf-sentry-conf-py"><a href="#配置-env-sentry-conf-sentry-conf-py" class="headerlink" title="配置(/env/sentry/conf/sentry.conf.py)"></a>配置(/env/sentry/conf/sentry.conf.py)</h3><h4 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'sentry'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'123456'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="redis配置"><a href="#redis配置" class="headerlink" title="redis配置"></a>redis配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SENTRY_REDIS_OPTIONS = &#123;</span><br><span class="line">    <span class="string">'hosts'</span>: &#123;</span><br><span class="line">        0: &#123;</span><br><span class="line">            <span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">            <span class="string">'port'</span>: 6379,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">CELERY_ALWAYS_EAGER = False</span><br><span class="line">BROKER_URL = <span class="string">'redis://localhost:6379/2'</span></span><br></pre></td></tr></table></figure>
<h4 id="端口配置"><a href="#端口配置" class="headerlink" title="端口配置"></a>端口配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SENTRY_URL_PREFIX = <span class="string">'http://127.0.0.1:9000'</span></span><br><span class="line">SENTRY_WEB_HOST = <span class="string">'0.0.0.0'</span></span><br><span class="line">SENTRY_WEB_PORT = 9000</span><br><span class="line">SENTRY_WEB_OPTIONS = &#123;</span><br><span class="line">    <span class="comment"># 'workers': 3,  # the number of gunicorn workers</span></span><br><span class="line">    <span class="comment"># 'secure_scheme_headers': &#123;'X-FORWARDED-PROTO': 'https'&#125;,</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="语言配置"><a href="#语言配置" class="headerlink" title="语言配置"></a>语言配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGES = (</span><br><span class="line">    (<span class="string">'en'</span>, gettext_noop(<span class="string">'English'</span>)),</span><br><span class="line">    (<span class="string">'zh-cn'</span>, gettext_noop(<span class="string">'Simplified Chinese'</span>)),</span><br><span class="line">    <span class="comment"># ('zh-cn', gettext_noop('Traditional Chinese')),</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h4 id="邮箱配置"><a href="#邮箱配置" class="headerlink" title="邮箱配置"></a>邮箱配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">EMAIL_BACKEND = <span class="string">'django.core.mail.backends.smtp.EmailBackend'</span></span><br><span class="line">EMAIL_HOST = <span class="string">'mail.test.com'</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'xxxxxx'</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'xxxx@test.com'</span></span><br><span class="line">EMAIL_PORT = xx</span><br><span class="line"><span class="comment"># EMAIL_USE_TLS = False</span></span><br><span class="line"><span class="comment"># The email address to send on behalf of</span></span><br><span class="line">SERVER_EMAIL = <span class="string">'xxxx@test.com'</span></span><br></pre></td></tr></table></figure>
<h2 id="建立django项目并使用sentry"><a href="#建立django项目并使用sentry" class="headerlink" title="建立django项目并使用sentry"></a>建立django项目并使用sentry</h2><h3 id="建立"><a href="#建立" class="headerlink" title="建立"></a>建立</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject <span class="built_in">test</span>_sentry</span><br></pre></td></tr></table></figure>
<h3 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'raven.contrib.django.raven_compat'</span>,</span><br><span class="line">)</span><br><span class="line"><span class="comment"># sentry</span></span><br><span class="line">RAVEN_CONFIG = &#123;</span><br><span class="line">    <span class="string">'dsn'</span>: <span class="string">'http://0e084efb47d24bedb60d24bedb6abd95ed7:d92981b0d24bedb6abd92981b05d7@xx.xx.xx.xx:9000/1'</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="触发"><a href="#触发" class="headerlink" title="触发"></a>触发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">故意让程序出错就OK了</span><br></pre></td></tr></table></figure>
<h3 id="收集info日志"><a href="#收集info日志" class="headerlink" title="收集info日志"></a>收集info日志</h3><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">LOGGING = &#123;</span><br><span class="line">    &apos;version&apos;: 1,</span><br><span class="line">    &apos;disable_existing_loggers&apos;: False,</span><br><span class="line">    &apos;formatters&apos;: &#123;</span><br><span class="line">        &apos;verbose&apos;: &#123;</span><br><span class="line">            &apos;format&apos;: &quot;INK|%(levelname)s|%(asctime)s|%(module)s|%(process)d|%(thread)d|%(message)s&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &apos;handlers&apos;: &#123;</span><br><span class="line">        &apos;console&apos;: &#123;</span><br><span class="line">            &apos;level&apos;: &apos;DEBUG&apos;,</span><br><span class="line">            &apos;class&apos;: &apos;logging.StreamHandler&apos;,</span><br><span class="line">            &apos;formatter&apos;: &apos;verbose&apos;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &apos;info&apos;: &#123;</span><br><span class="line">            &apos;level&apos;: &apos;INFO&apos;,</span><br><span class="line">            &apos;formatter&apos;: &apos;verbose&apos;,  # 使用哪种formatters日志格式</span><br><span class="line">            &apos;class&apos;: &apos;raven.contrib.django.raven_compat.handlers.SentryHandler&apos;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &apos;loggers&apos;: &#123;</span><br><span class="line">        &apos;django.request&apos;: &#123;</span><br><span class="line">            &apos;handlers&apos;: [&apos;console&apos;],</span><br><span class="line">            &apos;level&apos;: &apos;DEBUG&apos;,</span><br><span class="line">            &apos;propagate&apos;: True,</span><br><span class="line">        &#125;,</span><br><span class="line">        &apos;info&apos;: &#123;</span><br><span class="line">            &apos;handlers&apos;: [&apos;info&apos;, ],</span><br><span class="line">            &apos;level&apos;: &apos;INFO&apos;,</span><br><span class="line">            &apos;propagate&apos;: True,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import logging</span><br><span class="line">logger = logging.getLogger(&apos;info&apos;)</span><br><span class="line"></span><br><span class="line">logger.info(&apos;test&apos;)</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[decorator 装饰器]]></title>
      <url>http://yunsonbai.github.io/2016/05/26/decorator/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python的装饰器用途非常多，例如鉴权，重要参数前期验证等等，</span><br><span class="line">主要用于在进入方法以前做前期工作，下边举例针对类方法和函数</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="类方法修饰器"><a href="#类方法修饰器" class="headerlink" title="类方法修饰器"></a>类方法修饰器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from functools import wraps</span><br><span class="line"></span><br><span class="line">def create_user(func):</span><br><span class="line">@wraps(func)</span><br><span class="line">def _warp(self, *args, **kwargs):</span><br><span class="line">        <span class="comment"># 这里写你的方法</span></span><br><span class="line">        pass</span><br><span class="line">        <span class="built_in">return</span> Response(context)</span><br><span class="line">    <span class="built_in">return</span> func(self, *args, **kwargs)</span><br><span class="line"><span class="built_in">return</span> _warp</span><br></pre></td></tr></table></figure>
<h3 id="函数修饰器"><a href="#函数修饰器" class="headerlink" title="函数修饰器"></a>函数修饰器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">和类方法修饰器不通的是没有self</span><br><span class="line">from functools import wraps</span><br><span class="line"></span><br><span class="line">def create_user(func):</span><br><span class="line">@wraps(func)</span><br><span class="line">def _warp(*args, **kwargs):</span><br><span class="line">        <span class="comment"># 这里写你的方法</span></span><br><span class="line">        pass</span><br><span class="line">        <span class="built_in">return</span> Response(context)</span><br><span class="line">    <span class="built_in">return</span> func(*args, **kwargs)</span><br><span class="line"><span class="built_in">return</span> _warp</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python+mqtt实现推送]]></title>
      <url>http://yunsonbai.github.io/2016/05/24/mqtt-python/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">前段时间趁着空闲时间研究了一下mqtt,自己用python简单的</span><br><span class="line">实现了一下,希望日后能用上</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装mosquitto并使用命令行"><a href="#安装mosquitto并使用命令行" class="headerlink" title="安装mosquitto并使用命令行"></a>安装mosquitto并使用命令行</h2><h3 id="安装安装mosquitto"><a href="#安装安装mosquitto" class="headerlink" title="安装安装mosquitto"></a>安装安装mosquitto</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-add-repository ppa:mosquitto-dev/mosquitto-ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install mosquitto mosquitto-clients python-mosquitto</span><br><span class="line">或者：</span><br><span class="line">     apt-get install mosquitto</span><br></pre></td></tr></table></figure>
<h3 id="安装paho-mqtt"><a href="#安装paho-mqtt" class="headerlink" title="安装paho-mqtt"></a>安装paho-mqtt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pypi上有这个库，可以自行安装</span><br></pre></td></tr></table></figure>
<h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启动命令: /usr/sbin/mosquitto -c /etc/mosquitto/mosquitto.conf</span><br><span class="line">server：mosquitto_pub -t baiyunsong -h 127.0.0.1 -m <span class="string">"&#123;\"pin\":17,\"value\":0&#125;"</span></span><br><span class="line">client：mosquitto_sub -v -t baiyunsong -h 127.0.0.1    （先启动）</span><br></pre></td></tr></table></figure>
<h2 id="python代码"><a href="#python代码" class="headerlink" title="python代码"></a>python代码</h2><h3 id="server端"><a href="#server端" class="headerlink" title="server端"></a>server端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import paho.mqtt.client as mqtt</span></span><br><span class="line">from paho.mqtt.publish import mqtt</span><br><span class="line">import json</span><br><span class="line">mqttc = mqtt.Client()</span><br><span class="line">mqttc.connect(<span class="string">'127.0.0.1'</span>, port=1883)</span><br><span class="line">msg = &#123;</span><br><span class="line">    <span class="string">'pin'</span>: 17,</span><br><span class="line">    <span class="string">'value'</span>: 10</span><br><span class="line">&#125;</span><br><span class="line">msg = json.dumps(msg)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> mqttc.publish(<span class="string">'baisong'</span>, payload=msg)</span><br><span class="line">mqttc.loop(2)</span><br></pre></td></tr></table></figure>
<h3 id="client-端"><a href="#client-端" class="headerlink" title="client 端"></a>client 端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line">import paho.mqtt.client as mqtt</span><br><span class="line">import json</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">def on_connect(client, userdata, flags, rc):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Connected with result code '</span> + str(rc))</span><br><span class="line">    client.subscribe(<span class="string">'baisong'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def on_message(client, userdata, msg):</span><br><span class="line">    <span class="built_in">print</span> msg.topic + <span class="string">' '</span> + str(msg.payload)</span><br><span class="line">    <span class="built_in">print</span> json.loads(msg.payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    client = mqtt.Client()</span><br><span class="line">    client.on_connect = on_connect</span><br><span class="line">    client.on_message = on_message</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        client.connect(<span class="string">'127.0.0.1'</span>, port=1883)</span><br><span class="line">        client.loop_forever()</span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        client.disconnect()</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[创建自己的pypi库]]></title>
      <url>http://yunsonbai.github.io/2016/05/23/pypi%E5%BA%93/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在做项目的时候你会发现有好多重复性的工作在做着，如果我们能抽出公共部分的话</span><br><span class="line">那样你的工作就会事半功倍，那抽出来的公共部分就需要存放在自己的pypi库（也不</span><br><span class="line">排除你还有其他的办法）</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="搭建服务端"><a href="#搭建服务端" class="headerlink" title="搭建服务端"></a>搭建服务端</h2><h3 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果你不想混乱自己的环境可以利用virtualenv</span><br><span class="line">virtualenv3.5 pypi</span><br></pre></td></tr></table></figure>
<h3 id="安装需要的库"><a href="#安装需要的库" class="headerlink" title="安装需要的库"></a>安装需要的库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install apache2-utils</span><br><span class="line">pip install pypiserver</span><br><span class="line">pip install passlib</span><br></pre></td></tr></table></figure>
<h3 id="创建packages文件夹和配置文件-htaccess"><a href="#创建packages文件夹和配置文件-htaccess" class="headerlink" title="创建packages文件夹和配置文件.htaccess"></a>创建packages文件夹和配置文件.htaccess</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir packages</span><br><span class="line">htpasswd -sc .htaccess user（之后输入密码，例如123456）</span><br></pre></td></tr></table></figure>
<h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pypi-server -p 3141 -P ./.htaccess ./packages</span><br></pre></td></tr></table></figure>
<h2 id="客户端上传公共库"><a href="#客户端上传公共库" class="headerlink" title="客户端上传公共库"></a>客户端上传公共库</h2><h3 id="在用户根目录下添加配置文件-pypirc"><a href="#在用户根目录下添加配置文件-pypirc" class="headerlink" title="在用户根目录下添加配置文件.pypirc"></a>在用户根目录下添加配置文件.pypirc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">比如你是root用户：</span><br><span class="line">    <span class="built_in">cd</span></span><br><span class="line">    vim .pypirc</span><br><span class="line">    加入内容如下：（distutils处一定要换行）</span><br><span class="line">    [distutils]</span><br><span class="line">    index-servers =</span><br><span class="line">      <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">    [<span class="built_in">local</span>]</span><br><span class="line">    repository:http://xx.xx.xx.xx:3141</span><br><span class="line">    username:user</span><br><span class="line">    password:123456</span><br></pre></td></tr></table></figure>
<h3 id="上传包"><a href="#上传包" class="headerlink" title="上传包"></a>上传包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py sdist upload -r <span class="built_in">local</span></span><br></pre></td></tr></table></figure>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i http://localhost:3134/simple/ some-package</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[对redis命令incr的并发探索]]></title>
      <url>http://yunsonbai.github.io/2016/05/20/redis-incr/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">某个项目想利用redis实现业务锁,比如抽奖只允许被抽中</span><br><span class="line">一次, 那么在并发的情况下一定是要锁的,我们用django模</span><br><span class="line">拟每次去redis查询yunson对应的num完后，给num加1</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">双核，三个端口，nginx做代理（每个权重都为一样）</span><br></pre></td></tr></table></figure>
<h3 id="使用hset"><a href="#使用hset" class="headerlink" title="使用hset"></a>使用hset</h3><h4 id="redis数据结构"><a href="#redis数据结构" class="headerlink" title="redis数据结构"></a>redis数据结构</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yunson---&#123;<span class="string">'num'</span>:100&#125;（json格式）</span><br></pre></td></tr></table></figure>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class MR(APIView):</span><br><span class="line">    def get(self, request):</span><br><span class="line">        REDIS_CONF = &#123;</span><br><span class="line">            <span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">            <span class="string">'port'</span>: 6379,</span><br><span class="line">            <span class="string">'db'</span>: 10,</span><br><span class="line">            <span class="string">'password'</span>: <span class="string">''</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        r = redis.Redis(connection_pool=redis.ConnectionPool(**REDIS_CONF))</span><br><span class="line">        yunson = json.loads(r.hget(<span class="string">'test'</span>, <span class="string">'yunson'</span>))</span><br><span class="line">        num = yunson[<span class="string">'num'</span>]</span><br><span class="line">        yunson[<span class="string">'num'</span>] += 1</span><br><span class="line">        yunson = json.dumps(yunson)</span><br><span class="line">        r.hset(<span class="string">'test'</span>, <span class="string">'yunson'</span>, yunson)</span><br><span class="line">        logger = Logger(str(<span class="string">'JS_DJANGO'</span>))</span><br><span class="line">        logger.info(str(num))</span><br><span class="line">        <span class="built_in">return</span> Response(REDIS_CONF)</span><br></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab -n 1200 -c 400 http://127.0.0.1/mr</span><br></pre></td></tr></table></figure>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 655654 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking 127.0.0.1 (be patient)</span><br><span class="line">Completed 120 requests</span><br><span class="line">Completed 240 requests</span><br><span class="line">Completed 360 requests</span><br><span class="line">Completed 480 requests</span><br><span class="line">Completed 600 requests</span><br><span class="line">Completed 720 requests</span><br><span class="line">Completed 840 requests</span><br><span class="line">Completed 960 requests</span><br><span class="line">Completed 1080 requests</span><br><span class="line">Completed 1200 requests</span><br><span class="line">Finished 1200 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Document Path:          /mr</span><br><span class="line">Document Length:        54 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      400</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   17.807 seconds</span><br><span class="line">Complete requests:      1200</span><br><span class="line">Failed requests:        182</span><br><span class="line">   (Connect: 0, Receive: 0, Length: 182, Exceptions: 0)</span><br><span class="line">Write errors:           0</span><br><span class="line">Non-2xx responses:      182</span><br><span class="line">Total transferred:      324848 bytes</span><br><span class="line">HTML transferred:       86458 bytes</span><br><span class="line">Requests per second:    67.39 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       5935.669 [ms] (mean)</span><br><span class="line">Time per request:       14.839 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          17.82 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">redis结果：</span><br><span class="line">    &#123;<span class="string">"num"</span>: 616&#125;  差出：1200-182-616 = 402   </span><br><span class="line">    打日志时：根据日志分析发现除服率相当高上大几十（当然没看全，一看这样头就大</span><br><span class="line">    (你咋算的：</span><br><span class="line">        Complete requests:      1200</span><br><span class="line">        Failed requests:        182)</span><br></pre></td></tr></table></figure>
<h3 id="优化使用incr"><a href="#优化使用incr" class="headerlink" title="优化使用incr"></a>优化使用incr</h3><h4 id="redis数据结构-1"><a href="#redis数据结构-1" class="headerlink" title="redis数据结构"></a>redis数据结构</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yunson---0</span><br></pre></td></tr></table></figure>
<h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class MR(APIView):</span><br><span class="line">    def get(self, request):</span><br><span class="line">        REDIS_CONF = &#123;</span><br><span class="line">            <span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">            <span class="string">'port'</span>: 6379,</span><br><span class="line">            <span class="string">'db'</span>: 10,</span><br><span class="line">            <span class="string">'password'</span>: <span class="string">''</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        r = redis.Redis(connection_pool=redis.ConnectionPool(**REDIS_CONF))</span><br><span class="line">        try:</span><br><span class="line">            logger = Logger(str(<span class="string">'JS_DJANGO'</span>))</span><br><span class="line">            <span class="keyword">if</span> not r.get(<span class="string">'yunson'</span>):</span><br><span class="line">                yunson = r.incr(<span class="string">'yunson'</span>)</span><br><span class="line">                r.set(<span class="string">'yunson '</span>, yunson , ex=60)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                yunson= r.incr(<span class="string">'baisong'</span>)</span><br><span class="line">            logger.info(str(yunson))</span><br><span class="line">        except Exception, e:</span><br><span class="line">            <span class="built_in">print</span> Exception, e</span><br><span class="line">        <span class="built_in">return</span> Response(REDIS_CONF)</span><br></pre></td></tr></table></figure>
<h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab -n 1200 -c 400 http://127.0.0.1/mr</span><br></pre></td></tr></table></figure>
<h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">This is ApacheBench, Version 2.3 &lt;<span class="variable">$Revision</span>: 655654 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking 127.0.0.1 (be patient)</span><br><span class="line">Completed 120 requests</span><br><span class="line">Completed 240 requests</span><br><span class="line">Completed 360 requests</span><br><span class="line">Completed 480 requests</span><br><span class="line">Completed 600 requests</span><br><span class="line">Completed 720 requests</span><br><span class="line">Completed 840 requests</span><br><span class="line">Completed 960 requests</span><br><span class="line">Completed 1080 requests</span><br><span class="line">Completed 1200 requests</span><br><span class="line">Finished 1200 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        nginx/1.1.19</span><br><span class="line">Server Hostname:        127.0.0.1</span><br><span class="line">Server Port:            80</span><br><span class="line"></span><br><span class="line">Document Path:          /mr</span><br><span class="line">Document Length:        54 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      400</span><br><span class="line">Time taken <span class="keyword">for</span> tests:   17.311 seconds</span><br><span class="line">Complete requests:      1200</span><br><span class="line">Failed requests:        0</span><br><span class="line">Write errors:           0</span><br><span class="line">Total transferred:      313200 bytes</span><br><span class="line">HTML transferred:       64800 bytes</span><br><span class="line">Requests per second:    69.32 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">Time per request:       5770.450 [ms] (mean)</span><br><span class="line">Time per request:       14.426 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          17.67 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">redis结果：</span><br><span class="line">    yunson---1200</span><br><span class="line">    分毫不差</span><br></pre></td></tr></table></figure>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在业务逻辑控制锁的时候，尤其是在并发的时候可以考虑利用redis的这个机制，当然用数据库</span><br><span class="line">的锁也可以（同时数据库的锁更为灵活），但是如果只是类似于这种计数机制，可以尝试用redis</span><br><span class="line">毕竟redis是操作内存，速度上要快些</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python2到3项目迁移]]></title>
      <url>http://yunsonbai.github.io/2016/05/20/python2%E5%88%B03/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目前项目组逐步将项目迁移到python3，</span><br><span class="line">下边说一下在迁移的过程中遇到的一些问题和注意事项</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装python3"><a href="#安装python3" class="headerlink" title="安装python3"></a>安装python3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">起初我采用的是如下编译方式：</span><br><span class="line">    $ ./configure --prefix=/usr/<span class="built_in">local</span>/python3.5/</span><br><span class="line">    make install</span><br><span class="line">好景不长，收到了如下错误：</span><br><span class="line">    $ No module named _sqlite3</span><br><span class="line">解决办法：</span><br><span class="line">    $ yum -y install sqlite-devel</span><br><span class="line">    $ ./configure --enable-loadable-sqlite-extensions --prefix=/usr/<span class="built_in">local</span>/python3.5/</span><br><span class="line">    $ make install</span><br></pre></td></tr></table></figure>
<h2 id="迁移中需要注意的点"><a href="#迁移中需要注意的点" class="headerlink" title="迁移中需要注意的点"></a>迁移中需要注意的点</h2><h3 id="urllib2改变"><a href="#urllib2改变" class="headerlink" title="urllib2改变"></a>urllib2改变</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python2.7：</span><br><span class="line">    avatar_img = urllib2.urlopen(avatar_url).read()</span><br><span class="line">python3.5：</span><br><span class="line">    import urllib.request</span><br><span class="line">    avatar_img = urllib.request.urlopen(avatar_url).read()</span><br></pre></td></tr></table></figure>
<h3 id="redis配置改变"><a href="#redis配置改变" class="headerlink" title="redis配置改变"></a>redis配置改变</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">redis_conf = &#123;</span><br><span class="line">    <span class="string">'host'</span>: ip,</span><br><span class="line">    <span class="string">'port'</span>: port,</span><br><span class="line">    <span class="string">'db'</span>: 1,</span><br><span class="line">    <span class="string">'password'</span>: password,</span><br><span class="line">    <span class="string">'socket_timeout'</span>: None,</span><br><span class="line">    <span class="string">'encoding'</span>: <span class="string">'utf-8'</span>,</span><br><span class="line">    <span class="string">'encoding_errors'</span>: <span class="string">'strict'</span>,</span><br><span class="line">    <span class="string">'decode_responses'</span>: True    此处要注意</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="CStringIO与StringIO不能再用"><a href="#CStringIO与StringIO不能再用" class="headerlink" title="CStringIO与StringIO不能再用"></a>CStringIO与StringIO不能再用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">io.BytesIO</span><br><span class="line">io.StringIO</span><br></pre></td></tr></table></figure>
<h3 id="try和except的改变"><a href="#try和except的改变" class="headerlink" title="try和except的改变"></a>try和except的改变</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">python2.7：</span><br><span class="line">    try:</span><br><span class="line">        pass</span><br><span class="line">    except Exception, e:</span><br><span class="line">        pass</span><br><span class="line">python3.5:</span><br><span class="line">    try：</span><br><span class="line">        pass</span><br><span class="line">    except Exception as e:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure>
<h3 id="默认Image取消"><a href="#默认Image取消" class="headerlink" title="默认Image取消"></a>默认Image取消</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python2.7：</span><br><span class="line">    支持：import Image</span><br><span class="line">python3.5：</span><br><span class="line">    pip3.5 install Pillow</span><br><span class="line">    from PIL import Image</span><br></pre></td></tr></table></figure>
<h3 id="hash操作必须encode"><a href="#hash操作必须encode" class="headerlink" title="hash操作必须encode"></a>hash操作必须encode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sig_str = sig_string + appkey</span><br><span class="line">sig_str = sig_str.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">sig_md5 = hashlib.md5()</span><br><span class="line">sig_md5.update(sig_str)</span><br></pre></td></tr></table></figure>
<h3 id="xrange取消"><a href="#xrange取消" class="headerlink" title="xrange取消"></a>xrange取消</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">由range代替</span><br></pre></td></tr></table></figure>
<h3 id="startwith第一个参数必须是bytes或者bytes组成的tuple"><a href="#startwith第一个参数必须是bytes或者bytes组成的tuple" class="headerlink" title="startwith第一个参数必须是bytes或者bytes组成的tuple"></a>startwith第一个参数必须是bytes或者bytes组成的tuple</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startwith(b&apos;GIF89&apos;)(python3.5强制加b)</span><br></pre></td></tr></table></figure>
<h3 id="raw-input-改成input"><a href="#raw-input-改成input" class="headerlink" title="raw_input()改成input()"></a>raw_input()改成input()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python2.7：</span><br><span class="line">    a = raw_input(input a:)</span><br><span class="line">python3.5:</span><br><span class="line">    a = input(&apos;input a:&apos;)</span><br></pre></td></tr></table></figure>
<h3 id="有人可能用supervisor"><a href="#有人可能用supervisor" class="headerlink" title="有人可能用supervisor"></a>有人可能用supervisor</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">目前supervisor不支持python3，</span><br><span class="line">但是git上已久supervisor4，支持python3，</span><br><span class="line">我想不就得将来supervisor马上也就能在python3上使用了</span><br></pre></td></tr></table></figure>
<h3 id="python与yum"><a href="#python与yum" class="headerlink" title="python与yum"></a>python与yum</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">建议不要将python3软连在/usr/bin/python上，这样有可能导</span><br><span class="line">yum不能使用，</span><br><span class="line">如果非要这样软连，你需要修改：</span><br><span class="line">/usr/bin/yum</span><br><span class="line">    #!/usr/bin/python</span><br><span class="line">    改成：</span><br><span class="line">    #!/usr/bin/python2.7</span><br></pre></td></tr></table></figure>
<h3 id="提示bytes-like-object-is-required-not-‘str’"><a href="#提示bytes-like-object-is-required-not-‘str’" class="headerlink" title="提示bytes-like object is required, not ‘str’"></a>提示bytes-like object is required, not ‘str’</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解决办法：</span><br><span class="line">    1、加b</span><br><span class="line">    2、encode(&apos;utf-8&apos;)</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git常用命令]]></title>
      <url>http://yunsonbai.github.io/2016/05/19/git/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git可以说已经渗入到大部分互联网企业,下边记录一下</span><br><span class="line">在工作的这段时间用到的命令</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -r <span class="_">-d</span> origin/branch-name</span><br><span class="line">git push origin :branch-name</span><br></pre></td></tr></table></figure>
<h3 id="创建本地-push到远端分支"><a href="#创建本地-push到远端分支" class="headerlink" title="创建本地/push到远端分支"></a>创建本地/push到远端分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git branch dev</span><br><span class="line">git checkout dev</span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure>
<h3 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch 分支名称 <span class="_">-d</span></span><br><span class="line">例如，在master分支下，删除新开的dev分支：</span><br><span class="line">git branch dev <span class="_">-d</span></span><br><span class="line">注意：如果dev的更改，push到远程，在GitLab(或者其他git系统)上面进行了merge操作，但是本地master没有pull最新的代码，会删除不成功，可以先git pull origin master，或者强制删除</span><br><span class="line">git branch dev -D</span><br></pre></td></tr></table></figure>
<h3 id="创建tag号并push到远端"><a href="#创建tag号并push到远端" class="headerlink" title="创建tag号并push到远端"></a>创建tag号并push到远端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git tag <span class="_">-a</span> v1.01 -m <span class="string">"Relase version 1.01"</span></span><br><span class="line">git push origin -tags(提交全部tag)</span><br><span class="line">或者：</span><br><span class="line">git tag <span class="_">-a</span> v1.01 -m <span class="string">"Relase version 1.01"</span></span><br><span class="line">git push origin v1.01</span><br></pre></td></tr></table></figure>
<h3 id="删除远端tag号"><a href="#删除远端tag号" class="headerlink" title="删除远端tag号"></a>删除远端tag号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag <span class="_">-d</span> v1.01</span><br><span class="line">git push origin :refs/tags/v1.01</span><br></pre></td></tr></table></figure>
<h3 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git merge 需要合并的分支名</span><br><span class="line">例如，刚刚已经切换回master，现在需要合并dev的内容：</span><br><span class="line">git merge dev</span><br><span class="line">建议在GitLab(或者其他git系统)上面创建merge request的形式来进行分支的合并和代码审核</span><br></pre></td></tr></table></figure>
<h3 id="status"><a href="#status" class="headerlink" title="status"></a>status</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看发生变动的文件</span><br><span class="line">git status</span><br></pre></td></tr></table></figure>
<h3 id="与远程保持同步"><a href="#与远程保持同步" class="headerlink" title="与远程保持同步"></a>与远程保持同步</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br><span class="line">git rebase origin/master</span><br></pre></td></tr></table></figure>
<h3 id="追踪远程分支"><a href="#追踪远程分支" class="headerlink" title="追踪远程分支"></a>追踪远程分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -vv</span><br></pre></td></tr></table></figure>
<h3 id="回滚"><a href="#回滚" class="headerlink" title="回滚"></a>回滚</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard f46821f94eeb106ea841b9fbafa4bfb76beea691 </span><br><span class="line">(f46821f94eeb106ea841b9fbafa4bfb76beea691为commit编号)</span><br></pre></td></tr></table></figure>
<h3 id="查看commit编号"><a href="#查看commit编号" class="headerlink" title="查看commit编号"></a>查看commit编号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure>
<h3 id="显示不通"><a href="#显示不通" class="headerlink" title="显示不通"></a>显示不通</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff  全部的改动，包括没有add的</span><br><span class="line">git diff --stage   显示add的，</span><br><span class="line">git diff  commit1 commit2  （显示两次的不通，输入commit号）</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo命令]]></title>
      <url>http://yunsonbai.github.io/2016/05/12/hexo%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记录了一下hexo常用的命令, 在维护个人博客的时候经常会用到</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<h3 id="Insert-image"><a href="#Insert-image" class="headerlink" title="Insert image"></a>Insert image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[fiddler代理利器]]></title>
      <url>http://yunsonbai.github.io/2016/05/12/fiddler/</url>
      <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fiddler在前端开发工程师那可以说是利器,同样后端工程师也可能用到</span><br><span class="line">尤其是在利用app调试api的时候，也许你就会用到fiddler</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="只代理某个url"><a href="#只代理某个url" class="headerlink" title="只代理某个url"></a>只代理某个url</h3><h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如把线上某个url代理到本地/或者调试某个接口,便于调试</span><br></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">点击AotuResponder,之后把三个复选框全选上,然后点击add ruler</span><br><span class="line">加入:</span><br><span class="line">    regex:.*yunsonbai.com /activity/(.*)</span><br><span class="line">    http://127.0.0.1:8000/activity/<span class="variable">$1</span></span><br></pre></td></tr></table></figure>
<h3 id="设置host"><a href="#设置host" class="headerlink" title="设置host"></a>设置host</h3><h4 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">把某个域全部代理到本地</span><br></pre></td></tr></table></figure>
<h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">点击Tools-&gt;HOSTS-&gt;选上复选框</span><br><span class="line">加入:</span><br><span class="line">    127.0.0.1:8000 yunsonbai.com</span><br></pre></td></tr></table></figure>
<h3 id="如何让手机也走设置好的代理"><a href="#如何让手机也走设置好的代理" class="headerlink" title="如何让手机也走设置好的代理"></a>如何让手机也走设置好的代理</h3><h4 id="应用-2"><a href="#应用-2" class="headerlink" title="应用"></a>应用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">调试移动端应用</span><br></pre></td></tr></table></figure>
<h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">设置wifi代理为手动；</span><br><span class="line">servername: 你电脑的ip/或域名</span><br><span class="line">port: 8888（fiddler默认是启动8888端口）</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://www.telerik.com/fiddler" target="_blank" rel="external">Generating</a></p>
]]></content>
    </entry>
    
  
  
</search>
